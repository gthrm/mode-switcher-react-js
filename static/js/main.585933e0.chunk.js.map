{"version":3,"sources":["App.js","index.js"],"names":["App","props","theme","useTheme","isDark","setIsDark","css","background","text","type","buttonBorder","buttonBg","buttonText","buttonBgHover","buttonTextHover","onClick","themeLight","themeDark","rootElement","document","getElementById","ReactDOM","render","useState","window","matchMedia","matches","console","log"],"mappings":"89BAuDeA,MAnDf,SAAaC,GACX,IAAMC,EAAQC,cACNC,EAAsBH,EAAtBG,OAAQC,EAAcJ,EAAdI,UAChB,OACE,mBACEC,IACEA,YADC,IAGmBJ,EAAMK,WACjBL,EAAMM,OAQjB,yFACkBJ,EAAS,uCAAW,6CADtC,8BAGA,sOACA,sBACEK,KAAK,SACLH,IACEA,YADC,IAGmBJ,EAAMQ,aACNR,EAAMS,SACjBT,EAAMU,WAQOV,EAAMW,cACjBX,EAAMY,iBAInBC,QAAS,WACPV,GAAWD,KArBf,wEAwBkBA,EAAS,6CAAY,uCAxBvC,gCCjBAY,G,MAAa,CACjBR,KAAM,OACND,WAAY,OACZK,WAAY,OACZE,gBAAiB,OACjBJ,aAAc,OACdC,SAAU,mBACVE,cAAe,qBAGXI,EAAY,CAChBT,KAAM,OACND,WAAY,UACZK,WAAY,OACZE,gBAAiB,OACjBJ,aAAc,OACdC,SAAU,yBACVE,cAAe,0BAmBjB,IAAMK,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,aAjBhB,WAAiB,IAAD,EACcC,mBAE1BC,OAAOC,WAAW,gCAAgCC,SAHtC,mBACPtB,EADO,KACCC,EADD,KAQd,OAFAsB,QAAQC,IAAI,iBAAkBJ,OAAOC,WAAW,gCAAgCC,SAG9E,YAAC,IAAD,CAAexB,MAAOE,EAASa,EAAYD,GACzC,YAAC,EAAD,CAAKZ,OAAQA,EAAQC,UAAWA,OAOtB,MAAUa,K","file":"static/js/main.585933e0.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useTheme } from 'emotion-theming';\n\nfunction App(props) {\n  const theme = useTheme();\n  const { isDark, setIsDark } = props;\n  return (\n    <div\n      css={\n        css`\n        padding: 50px 0;\n        background-color: ${theme.background};\n        color: ${theme.text};\n        text-align: center;\n        height: 100vh;\n        transition-duration: 0.2s;\n        transition-property: background-color, color;\n      `\n      }\n    >\n      <h1>\n        {`Привет! Это ${isDark ? 'тёмная' : 'светлая'} тема`}\n      </h1>\n      <h2>А теперь мы можем сделать немного магии</h2>\n      <button\n        type=\"submit\"\n        css={\n          css`\n          margin-top: 30px;\n          border: 2px solid ${theme.buttonBorder};\n          background-color: ${theme.buttonBg};\n          color: ${theme.buttonText};\n          padding: 14px 28px;\n          font-size: 16px;\n          transition-duration: 0.2s;\n          transition-property: background-color, color;\n          cursor: pointer;\n\n          :hover {\n            background-color: ${theme.buttonBgHover};\n            color: ${theme.buttonTextHover};\n          }\n        `\n        }\n        onClick={() => {\n          setIsDark(!isDark);\n        }}\n      >\n        {`Изменить на ${isDark ? 'светлую' : 'тёмную'} тему`}\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","/** @jsx jsx */\nimport { useState } from 'react';\nimport { jsx } from '@emotion/core';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'emotion-theming';\nimport App from './App';\nimport './styles.css';\n\nconst themeLight = {\n  text: '#000',\n  background: '#fff',\n  buttonText: '#000',\n  buttonTextHover: '#fff',\n  buttonBorder: '#000',\n  buttonBg: 'rgba(0, 0, 0, 0)',\n  buttonBgHover: 'rgba(0, 0, 0, 1)',\n};\n\nconst themeDark = {\n  text: '#fff',\n  background: '#121212',\n  buttonText: '#fff',\n  buttonTextHover: '#000',\n  buttonBorder: '#fff',\n  buttonBg: 'rgba(255, 255, 255, 0)',\n  buttonBgHover: 'rgba(255, 255, 255, 1)',\n};\n\nfunction Root() {\n  const [isDark, setIsDark] = useState(\n    // eslint-disable-next-line no-undef\n    window.matchMedia('(prefers-color-scheme: dark)').matches\n  );\n  // eslint-disable-next-line no-undef\n  console.log('is dark-scheme', window.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  return (\n    <ThemeProvider theme={isDark ? themeDark : themeLight}>\n      <App isDark={isDark} setIsDark={setIsDark} />\n    </ThemeProvider>\n  );\n}\n\n// eslint-disable-next-line no-undef\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Root />, rootElement);\n"],"sourceRoot":""}